# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type GivenAnswer {
  PageID: ID!
  Answer: [String!]!
}

type PrivateGame @model @auth(rules: [{allow: owner}]) {
  id: ID!
  name: String!
  pages: [PrivatePage!]!
}

type PrivatePage {
  title: String!
  description: String
  hasTimeLimit: Boolean!
  timeLimit: Int
  checkType: CheckType!
  pointsForSpeed: Boolean!
  file: String
  pageType: PageType!
  numberOfOptions: Int
  answers: [PrivateAnswer]!
}

type PrivateAnswer {
  description: String
  value: Int
}

type PublicGame @model {
  id: ID!
  pin: Int! @index(name: "byPin", queryField: "publicGameByPin")
  name: String!
  currentPage: PublicPage
  privategameID: ID! @index(name: "byPublicGame", queryField: "publicGameByPrivateGameID")
  teams: [Team!] @hasMany(indexName: "byPublicGame", fields: ["id"])
  score: [UserScore!]
  userList: [User!] @hasMany(indexName: "byPublicGame", fields: ["id"])
}

type PublicPage {
  title: String!
  description: String
  hasTimeLimit: Boolean!
  timeLimit: Int
  file: String
  pageType: PageType
  answers: [String]!
}

type UserScore {
  id: ID!
  score: Int!
}

type Team @model {
  id: ID!
  Users: [User] @hasMany(indexName: "byTeam", fields: ["id"])
  publicgameID: ID @index(name: "byPublicGame")
}

type User @model {
  id: ID!
  name: String!
  givenAnswers: [GivenAnswer]
  teamID: ID @index(name: "byTeam")
  publicgameID: ID! @index(name: "byPublicGame")
}

enum PageType {
  MULTIPLE_CHOICE
  OPEN
  OPEN_LIST
  APPROXIMATION
  ORDER
  TITLE_CARD
  PUZZLE
  VOTE
}

enum CheckType {
  PREDEFINED_ANSWER
  GAMEMASTERS_AFTERWARDS
  USERS_VOTE
  GAMEMASTERS_VOTE
}
