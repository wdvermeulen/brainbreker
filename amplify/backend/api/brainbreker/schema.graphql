type PrivateGame @model {
  id: ID!
  name: String!
  pages: [PrivatePage!]! @connection(name: "privateGamePages")
}

type PrivatePage @model {
  id: ID!
  title: String!
  description: String
  hasTimeLimit: Boolean!
  timeLimit: Int
  checkType: CheckType!
  pointsForSpeed: Boolean
  file: String
  questionType: [QuestionType]!
  numberOfOptions: Int
  privateGame: PrivateGame! @connection(name: "privateGamePages")
  privateAnswers: [PrivateAnswer]! @connection(name: "privatePageAnswers")
}

type PrivateAnswer @model {
  id: ID!
  Page: PrivatePage! @connection(name: "privatePageAnswers")
  description: String!
  value: Int!
}

type PublicGame @model @key(fields: ["pin"]) {
  pin: Int!
  id: ID!
  name: String!
  currentPage: PublicPage @connection(name: "publicGamePage")
  connectedUsers: [PublicUser]! @connection(name: "publicGameUsers")
  connectedTeams: [PublicTeam]! @connection(name: "publicGameTeams")
  connectedGamemasters: [PublicGamemaster]! @connection(name: "publicGameGamemasters")
}

type PublicPage @model {
  id: ID!
  title: String!
  description: String
  timeLimit: Int
  file: String
  questionType: [QuestionType]!
  publicGame: PublicGame! @connection(name: "publicGamePage")
  answers: [PublicAnswer]! @connection(name: "publicPageAnswers")
}

type PublicAnswer @model {
  id: ID!
  Page: PublicPage! @connection(name: "publicPageAnswers")
  description: String!
}

type PublicUser @model {
  id: ID!
  name: String!
  points: Int
  currentPage: Int
  currentAnswer: String
  publicGame: PublicGame! @connection(name: "publicGameUsers")
  team: PublicTeam @connection(name: "publicTeamUsers")
}

type PublicTeam @model {
  id: ID!
  name: String!
  points: Int
  users: [PublicUser]! @connection(name: "publicTeamUsers")
  publicGame: PublicGame! @connection(name: "publicGameTeams")
}

type PublicGamemaster @model {
  id: ID!
  publicGame: PublicGame! @connection(name: "publicGameGamemasters")
}

enum QuestionType {
  MULTIPLE_CHOICE,
  OPEN,
  OPEN_LIST,
  APPROXIMATION,
  ORDER,
  TITLE_CARD,
  PUZZLE,
  VOTE,
}

enum CheckType {
  PREDEFINED_ANSWER,
  GAMEMASTERS_AFTERWARDS,
  USERS_VOTE,
  GAMEMASTERS_VOTE
}
